{"version":3,"sources":["components/Button/index.js","components/ImageCard/index.js","components/SideBar/index.js","sections/AboutSection/index.js","sections/BlogSection/index.js","sections/ContactSection/index.js","sections/EducationSection/index.js","sections/ExperienceSection/index.js","sections/ProjectsSection/index.js","App.js","serviceWorker.js","index.js","resources/larry.png","resources/LarryAgbana.pdf"],"names":["ButtonComponent","props","icon","size","name","color","ml","mr","mt","px","type","shape","style","textAlign","marginTop","paddingLeft","paddingRight","marginLeft","marginRight","display","ImageCard","src","alt","onClick","className","Sider","Layout","SideBar","useState","selected","setSelected","breakpoint","theme","collapsedWidth","height","position","left","imageSrc","scroll","scrollToTop","mode","selectedKeys","Item","key","activeClass","to","spy","smooth","offset","duration","resume","target","Button","FilePdfOutlined","AboutSection","id","backgroundColor","padding","minHeight","BlogSection","ContactSection","EducationSection","ExperienceSection","ProjectsSection","Content","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.755a38d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'antd/dist/antd.css'\r\nimport { Button } from 'antd'\r\n\r\n// Button component\r\n// Takes props used for styling and naming\r\nfunction ButtonComponent (props) {\r\n  const { icon, size, name, color, ml, mr, mt, px } = props\r\n  return (\r\n    <Button\r\n      type='primary'\r\n      shape='round'\r\n      icon={icon}\r\n      size={size}\r\n      color={color}\r\n      style={{\r\n        textAlign: 'center',\r\n        marginTop: mt,\r\n        paddingLeft: px,\r\n        paddingRight: px,\r\n        marginLeft: ml,\r\n        marginRight: mr,\r\n        display: 'block'\r\n      }}\r\n    >\r\n      {name}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ButtonComponent\r\n","// Import react\r\nimport React from 'react'\r\n// Import styling\r\nimport './style.css'\r\n\r\n\r\nexport default function ImageCard(props) {\r\n    const { src, alt, onClick } = props\r\n\r\n    return (\r\n            <div className='img-block'>\r\n              <img src={src} alt={alt} onClick={onClick} />\r\n            </div>\r\n    )\r\n\r\n}","// Install react, react-dom, and react-scroll methods\r\nimport React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Link as ResumeLink } from 'react-router-dom'\r\nimport { Link, animateScroll as scroll } from 'react-scroll'\r\n\r\n// Import ant design components and styling\r\nimport 'antd/dist/antd.css'\r\nimport { FilePdfOutlined } from '@ant-design/icons'\r\nimport { Layout, Menu } from 'antd'\r\n\r\n// Import components\r\nimport ButtonComponent from '../../components/Button'\r\nimport ImageCard from '../../components/ImageCard'\r\n\r\n// Import image and resume docs\r\nimport imageSrc from '../../resources/larry.png'\r\nimport resume from '../../resources/LarryAgbana.pdf'\r\n\r\n// Destructure Layout to access the Sider component\r\nconst { Sider } = Layout\r\n\r\nexport function SideBar() {\r\n  \r\n  // Function to scroll to the top of the page when called\r\n  // calling react-scroll method\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop()\r\n  }\r\n\r\n  // Set state to updated the sidebar menu key\r\n  const [selected, setSelected] = useState('1')\r\n\r\n  return (\r\n    <Sider\r\n      breakpoint='md'\r\n      theme='light'\r\n      collapsedWidth='0'\r\n      // onBreakpoint={broken => {\r\n      //   console.log(broken)\r\n      // }}\r\n      // onCollapse={(collapsed, type) => {\r\n      //   console.log(collapsed, type)\r\n      // }}\r\n      style={{\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        left: 0,\r\n        textAlign: 'center'\r\n      }}\r\n    >\r\n      <ImageCard\r\n        src={imageSrc}\r\n        alt='Larry Agbana Profile Image'\r\n        onClick={scrollToTop}\r\n      />\r\n      <Router>\r\n        <Menu theme='dark' mode='inline' selectedKeys={[selected]}>\r\n          <Menu.Item key='1'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/about'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('1')}\r\n            >\r\n              About\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='2'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/experience'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('2')}\r\n            >\r\n              Experience\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='3'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/education'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('3')}\r\n            >\r\n              Education\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='4'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/projects'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('4')}\r\n            >\r\n              Projects\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='5'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/blog'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('5')}\r\n            >\r\n              Blog\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key='6'>\r\n            <Link\r\n              activeClass='active'\r\n              to='/contact'\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-70}\r\n              duration={500}\r\n              onClick={() => setSelected('6')}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Router>\r\n      <Router>\r\n        <ResumeLink to={resume} target='_blank'>\r\n          <ButtonComponent\r\n            name='Resume'\r\n            size='large'\r\n            ml='auto'\r\n            mr='auto'\r\n            mt='4rem'\r\n            px='2rem'\r\n            icon={<FilePdfOutlined />}\r\n          />\r\n        </ResumeLink>\r\n      </Router>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\n\r\nexport function AboutSection (props) {\r\n  const { id } = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'purple',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function BlogSection(props) {\r\n  const { id } = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'purple',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function ContactSection(props) {\r\n  const {id} = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'yellow',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function EducationSection(props) {\r\n  const {id} = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'purple',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function ExperienceSection(props) {\r\n  const {id} = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'yellow',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function ProjectsSection (props) {\r\n  const {id} = props\r\n  return (\r\n    <section\r\n      className='site-layout-background mainview'\r\n      id={id}\r\n      style={{\r\n        backgroundColor: 'yellow',\r\n        color: 'white',\r\n        padding: '2vw 2vw 2vw 15vw',\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <p>\r\n        With Reach Router, any component that's a direct child of the router\r\n        receives a location prop that describes the user's current location\r\n        within the app. In my case, the header navigation is a child of a page\r\n        layout component. Rather than passing location through as a prop, I've\r\n        used the Location component. This provides a child render prop that has\r\n        access to the user's location.\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","// import react and reatc-router-dom methods\nimport React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n// import styling elements and Layout component\nimport 'antd/dist/antd.css'\nimport './App.css'\nimport { Layout } from 'antd'\n\n// import SideBar component and all sections\nimport SideBar from '../src/components/SideBar'\nimport {\n  AboutSection,\n  BlogSection,\n  ContactSection,\n  EducationSection,\n  ExperienceSection,\n  ProjectsSection\n} from '../src/sections/index'\n\n// Destructure Layout to access the Sider component\nconst { Content } = Layout\n\n// App function that returns the page of all JSX components\nfunction App () {\n  return (\n    <Layout>\n      <Router>\n        <SideBar />\n      </Router>\n      <Content>\n        <AboutSection id='/about' />\n        <ExperienceSection id='/experience' />\n        <EducationSection id='/education' />\n        <ProjectsSection id='/projects' />\n        <BlogSection id='/blog' />\n        <ContactSection id='/contact' />\n      </Content>\n    </Layout>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/larry.b72b9d25.png\";","module.exports = __webpack_public_path__ + \"static/media/LarryAgbana.89d6e40d.pdf\";"],"sourceRoot":""}